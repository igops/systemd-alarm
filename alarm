#!/usr/bin/env bash

_path_service="/etc/systemd/system"
_path_conf="/etc/alarm"
_path_log="/var/log/alarm"

if [ "$1" == "-h" ]; then
  echo
  echo "1. Installing:"
  echo
  echo "    ./`basename $0` install  # creates systemd service"
  echo
  echo "    The following files will be created:"
  echo
  echo "        $_path_service/alarm.service"
  echo "        $_path_service/alarm.timer"
  echo "        $_path_conf/alarm.conf"
  echo "        $_path_log/alarm.log"
  echo
  echo
  echo "2. Setting up alarm:"
  echo
  echo "    ./`basename $0` set HH:MM, e.g.: "
  echo "    ./`basename $0` set 12:25  # sets the alarm to 12:25 for every weekday"
  echo
  echo "    Or configure the alarm time manually in $_path_conf; no service restart required"
  echo
  echo
  echo "3. Getting the alarm time:"
  echo
  echo "    ./`basename $0` get"
  echo
  echo
  echo "4. Switching off alarm:"
  echo
  echo "    ./`basename $0` stop"
  echo
  exit 0
fi

if [ "$1" == "install" ]; then
  echo "Copying files"
  mkdir -p $_path_service
  mkdir -p $_path_conf
  mkdir -p $_path_log
  cp ./alarm.service $_path_service/alarm.service
  cp ./alarm.timer $_path_service/alarm.timer
  touch $_path_conf/alarm.conf
  touch $_path_log/alarm.log

  chown $USER:$USER $_path_conf/alarm.conf

  echo "Starting systemctl timer"
  # @see https://wiki.archlinux.org/index.php/Systemd/Timers
  # @see https://askubuntu.com/a/1083647

  # reload cache
  systemctl daemon-reload
  # start on booting
  systemctl enable alarm.timer
  # start now too
  systemctl start alarm.timer
  # get status
  systemctl status alarm.timer
  exit 0
fi

if [ "$1" == "set" ]; then
  echo "$2" > $_path_conf/alarm.conf
  exit 0
fi

if [ "$1" == "get" ]; then
  cat $_path_conf/alarm.conf
  exit 0
fi

if [ "$1" == "off" ]; then
  # disble on booting
  systemctl disable alarm.timer
  # disalbe now too
  systemctl stop alarm.timer
  exit 0
fi
